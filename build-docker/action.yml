name: "Setup QEMU, docker buildx, Build and push image to GCR"
description: "Setup python env and install deps for testing and testing"
inputs:
  python-version:
    description: "python version"
    required: true
    default: "3.10"
  verify-gcloud-artifact:
    description: "String boolean to verify or not the existence of artifact"
    default: "false"
  dockerfile-context:
    description: "Path to Dockerfile to build"
    default: .
  dockerfile-file:
    description: "Name of the Dockerfile"
    default: Dockerfile
  GCP_SERVICE_ACCOUNT:
    description: "GCP Service Account"
    required: true
  GCP_LOCATION:
    description: "GCP Region"
    required: true
  GCP_PROJECT_ID:
    description: "GCP Project ID"
    required: true
  GCP_SERVICE_NAME:
    description: "Service name to upload to GCP"
    required: true
  GCP_ARTIFACT_REPOSITORY:
    description: "Artifact Repository"
    required: true
  BLOOMPY_GAR_PATH:
    description: "Bloompy GAR Path"
    required: true
  NO_BUILD_CACHE:
    description: "Use build cache"
    default: "false"
runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ inputs.python-version }}
    - id: "auth"
      name: "Authenticate to Google Cloud"
      uses: "google-github-actions/auth@v2"
      with:
        export_environment_variables: true
        credentials_json: ${{ inputs.GCP_SERVICE_ACCOUNT }}
    - name: "Use gcloud CLI to verify the existence of the artifact repository and create it if necessary"
      if: ${{ inputs.verify-gcloud-artifact == 'true' }}
      run: |
        if gcloud artifacts repositories describe ${{ inputs.GCP_ARTIFACT_REPOSITORY }} \
        --project=${{ env.GCP_PROJECT }} \
        --location=${{ inputs.GCP_LOCATION }}; \
        then echo "Artifact Repository already exist"; \
        else gcloud artifacts repositories create ${{ inputs.GCP_ARTIFACT_REPOSITORY }} \
        --location=${{ inputs.GCP_LOCATION }} --repository-format=docker; \
        fi
      shell: bash
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Docker Auth
      id: docker-auth
      uses: "docker/login-action@v3"
      with:
        registry: ${{ inputs.GCP_LOCATION }}-docker.pkg.dev
        username: _json_key
        password: ${{ inputs.GCP_SERVICE_ACCOUNT }}
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        context: ${{ inputs.dockerfile-context }}
        file: ${{ inputs.dockerfile-file }}
        push: true
        tags: ${{ inputs.GCP_LOCATION }}-docker.pkg.dev/${{ inputs.GCP_PROJECT_ID }}/${{ inputs.GCP_ARTIFACT_REPOSITORY }}/${{ inputs.GCP_SERVICE_NAME }}:${{ github.sha }}
        build-args: index_url=${{ inputs.BLOOMPY_GAR_PATH }}
        secrets: gar_service_account=${{ inputs.GCP_SERVICE_ACCOUNT }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        no-cache: ${{ inputs.NO_BUILD_CACHE }}
